<?php

namespace App\Service\{{ entity.shortName }};

use App\Dto\{{ entity.shortName }}\{{ entity.shortName }}Dto;
use App\Entity\{{ entity.shortName }};
use App\Exception\UuidException;
use App\Interfaces\Dto\DtoInterface;
use App\Interfaces\EntityInterface;
use App\Interfaces\Service\EntityHydratorInterface;
use App\Service\UuidService;

class {{ entity.shortName }}HydratorService implements EntityHydratorInterface
{
    /**
     * @var UuidService
     */
    private $uuidService;

    /**
     * {{ entity.shortName }}HydratorService constructor.
     *
     * @param UuidService $uuidService
     */
    public function __construct(UuidService $uuidService)
    {
        $this->uuidService = $uuidService;
    }

    /**
    * {@inheritdoc}
    *
    * @param EntityInterface $entity
    * @param DtoInterface    $dto
    *
    * @return EntityInterface
    *
    * @throws UuidException
    *
    * @var {{ entity.shortName }}    $entity
    * @var {{ entity.shortName }}Dto $dto
    */
    public function hydrateEntityWithDto(EntityInterface $entity, DtoInterface $dto): EntityInterface
    {
        $uuid = (null !== $dto->uuid) ? $dto->uuid : $this->getUuid();

        $entity->setUuid($uuid)
{% for property in entity.properties %}
{% if 'id' != property.name and 'uuid' != property.name %}
            ->set{{ property.name|capitalize }}($dto->{{ property.name }})
{% endif %}
{% endfor %}
        ;

        return $entity;
    }

    /**
    * {@inheritdoc}
    *
    * @throws UuidException
    */
    public function getUuid(): string
    {
        return $this->uuidService->create();
    }

    /**
    * {@inheritdoc}
    *
    * @var {{ entity.shortName }}
    * @var {{ entity.shortName }}Dto $dto
    */
    public function hydrateDtoWithEntity(EntityInterface $entity, DtoInterface $dto): DtoInterface
    {
{% for property in entity.properties %}
{% if 'id' != property.name %}
        $dto->{{ property.name }} = $entity->get{{ property.name|capitalize }}();
{% endif %}
{% endfor %}

        return $dto;
    }

    /**
    * {@inheritdoc}
    */
    public function canHandle(EntityInterface $entity): bool
    {
        return $entity instanceof {{ entity.shortName }};
    }
}
